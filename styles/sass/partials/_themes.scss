@use './variables' as *;
// themes: using same variable names that change value based on theme type (class of themeDark/themeLight on root element)
$themes: (
    Light: (bgColor: $white,
        bgColorDark: $accentBlue,
        primeTextColor: $darkBlue,
        darkTextColor:$darkBlue,


    ),

    Dark:(bgColor: $darkBlue,
        bgColorDark: $accentBlue,
        primeTextColor: $white,
        darkTextColor:$darkBlue,

    )
);




@mixin themed() {

    @each $theme,
    $map in $themes {

        // using keyword themeName as class selector
        .theme#{$theme} & {
            $theme-map: () !global;

            //create theme map, each key 
            @each $key,
            $submap in $map {
                $value: map-get(map-get($themes, $theme), '#{$key}');
                $theme-map: map-merge($theme-map, ($key: $value)) !global;
            }

            @content;
            $theme-map: null !global;
        }
    }
}

@function t($key) {
    @return map-get($theme-map, $key);
}